#!/usr/bin/env -S perl -CSDA
use strict; use warnings; use autodie; use v5.28; use Carp; use Data::Dumper;
use warnings FATAL => qw( uninitialized );

my ($src, $global_rewrite) = @ARGV;
my $code; my $compiled;

sub macroexpand {
  while( 1 ) {
    my $re; $re = qr{
      \{
         (?: (?> [^{}]+ ) | (??{ $re }))*
      \}
    };
    last unless $_[1] =~ s{ ([[:alnum:]_-]):: $re}{
    }xmesg;
  }
}

{ local $/; open my $fh, q[<], $src; $src = <$fh>; close $fh; }

$_ = $src;
eval $global_rewrite or die "preproc: $@";
s/^#PP:(OUT|IGN[[:upper:]]*)\b/PLEOKAK\n/gm;
s/^#PP:COPY\b/PLEOKAK\n\$compiled .= \$code;\n/gm;
s/^#PP:REWRITE\b(.*)/PLEOKAK\n{ $1 }\n\$compiled .= \$code;/gm;
s/^#PP:CODE\b//gm;
s{(^#PP:CODE_IN\n)(?<plcode>.*?)(^#PP:CODE_OUT\n)}{
  $+{plcode} =~ s/^[# ]+//gmr
}mesg;
s/^#PP:IN\b/\$code = <<'PLEOKAK';/gm;
$src = $_;
#{ open my $fh, q[>], q[/tmp/kakinv.pl]; print $fh $src; }
eval $src or die "preproc: $@";
print $compiled;
